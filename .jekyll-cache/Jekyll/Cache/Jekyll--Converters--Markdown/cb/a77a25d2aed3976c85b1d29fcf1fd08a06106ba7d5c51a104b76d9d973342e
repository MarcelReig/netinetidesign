I"‰<h3 class="lead my-5" id="los-args-y-kwargs-en-python-nos-permiten-pasar-un-n√∫mero-variable-de-argumentos-a-una-funci√≥n">Los <code class="language-plaintext highlighter-rouge">*args</code> y <code class="language-plaintext highlighter-rouge">**kwargs</code> en Python nos permiten pasar un n√∫mero variable de argumentos a una funci√≥n.</h3>

<h2 id="cabecero-nivel-2">Cabecero nivel 2</h2>

<p>En una funci√≥n t√≠pica tenemos el nombre de la funci√≥n y unos par√°metros, despu√©s en la llamada a la funci√≥n se espera que haya el mismo n√∫mero de argumentos que de par√°metros y si no es as√≠ dar√° un error.</p>
<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">suma</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Suma:"</span><span class="p">,</span> <span class="n">x</span><span class="o">+</span><span class="n">y</span><span class="o">+</span><span class="n">z</span><span class="p">)</span>


<span class="n">suma</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>

<span class="c1"># Return: 17
</span></code></pre></div></div>
<p>Error al enviar un n√∫mero distinto de argumentos que de par√°metros:</p>
<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">suma</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Suma:"</span><span class="p">,</span> <span class="n">x</span><span class="o">+</span><span class="n">y</span><span class="o">+</span><span class="n">z</span><span class="p">)</span>


<span class="n">suma</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">)</span>

<span class="c1"># TypeError: suma() takes 3 positional arguments but 7 were given
</span></code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">sumar_numeros</span><span class="p">(</span><span class="o">*</span><span class="n">num</span><span class="p">):</span>
    <span class="n">suma</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">num</span><span class="p">:</span>
        <span class="n">suma</span> <span class="o">=</span> <span class="n">suma</span> <span class="o">+</span> <span class="n">n</span>

    <span class="k">print</span><span class="p">((</span><span class="s">"Suma:"</span><span class="p">,</span> <span class="n">suma</span><span class="p">))</span>


<span class="n">sumar_numeros</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
<span class="n">sumar_numeros</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">)</span>
</code></pre></div></div>
:ET