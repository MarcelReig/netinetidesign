I"Á<h3 class="lead mt-5" id="las-funciones-nos-permiten-reutilizar-bloques-de-c√≥digo-en-diferentes-partes-de-nuestra-aplicaci√≥n">Las funciones nos permiten reutilizar bloques de c√≥digo en diferentes partes de nuestra aplicaci√≥n.</h3>

<h3 class="lead mb-5" id="las-funciones-se-crean-con-la-palabra-clave-def-seguida-por-el-nombre-de-la-funci√≥n-y-par√©ntesis-my_func-entre-los-par√©ntesis-van-los-par√°metros-de-la-funci√≥n-y-despu√©s-definimos-el-contenido-de-la-funci√≥n-que-ir√°-en-un-bloque-de-c√≥digo-indentado-para-ejecutar-la-funci√≥n-solo">Las funciones se crean con la palabra clave <code class="language-plaintext highlighter-rouge">def</code> seguida por el nombre de la funci√≥n y par√©ntesis <code class="language-plaintext highlighter-rouge">my_func()</code> entre los par√©ntesis van los par√°metros de la funci√≥n y despu√©s definimos el contenido de la funci√≥n que ir√° en un bloque de c√≥digo indentado. Para ejecutar la funci√≥n solo</h3>

<h2 id="ejemplo-de-funci√≥n">Ejemplo de funci√≥n</h2>

<p>Los par√©ntesis son obligatorios, los par√°metros son opcionales, no todas las funciones tienen par√°metros.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">full_name</span><span class="p">(</span><span class="n">first</span><span class="p">,</span> <span class="n">last</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">f'</span><span class="si">{</span><span class="n">first</span><span class="si">}</span><span class="s"> </span><span class="si">{</span><span class="n">last</span><span class="si">}</span><span class="s">'</span><span class="p">)</span>

<span class="n">full_name</span><span class="p">(</span><span class="s">'Marcel'</span><span class="p">,</span> <span class="s">'Reig'</span><span class="p">)</span>

<span class="c1"># Output: Marcel Reig
</span></code></pre></div></div>

<p>Ejemplo de una funci√≥n con un condicional.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">user_auth</span><span class="p">(</span><span class="n">email</span><span class="p">,</span> <span class="n">password</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">email</span> <span class="o">==</span> <span class="s">'marcelreig@gmail.com'</span> <span class="ow">and</span> <span class="n">password</span> <span class="o">==</span> <span class="s">'admin123'</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'Usuario autentificado'</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'Usuario o contrase√±a incorrecto'</span><span class="p">)</span>


<span class="n">user_auth</span><span class="p">(</span><span class="s">'marcelreig@gmail.com'</span><span class="p">,</span> <span class="s">'admin123'</span><span class="p">)</span>
<span class="c1"># Output: Usuario autentificado
</span><span class="n">user_auth</span><span class="p">(</span><span class="s">'marcelreig@gmail.com'</span><span class="p">,</span> <span class="s">'menorca'</span><span class="p">)</span>
<span class="c1"># Output: Usuario o contrase√±a incorrecto
</span></code></pre></div></div>

<p>Ejemplo de funci√≥n sin par√°metros.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">counter</span><span class="p">():</span>
    <span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>

        
<span class="n">counter</span><span class="p">()</span>

<span class="c1"># Output: 
</span><span class="s">'''
1
2
3
'''</span>
</code></pre></div></div>

<h2 id="funciones-anidadas-en-python">Funciones anidadas en Python</h2>

<p>Cuando una funci√≥n solo va a ser utilizada dentro de una funci√≥n podemos crearla dentro de la funci√≥n en caso contrario deber√≠amos crearla fuera.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">greeting</span><span class="p">(</span><span class="n">first</span><span class="p">,</span> <span class="n">last</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">full_name</span><span class="p">():</span>
        <span class="k">return</span> <span class="s">f'</span><span class="si">{</span><span class="n">first</span><span class="si">}</span><span class="s"> </span><span class="si">{</span><span class="n">last</span><span class="si">}</span><span class="s">'</span>

    <span class="k">print</span><span class="p">(</span><span class="s">f'Hola </span><span class="si">{</span><span class="n">full_name</span><span class="p">()</span><span class="si">}</span><span class="s">!'</span><span class="p">)</span>


<span class="n">greeting</span><span class="p">(</span><span class="s">'Marcel'</span><span class="p">,</span> <span class="s">'Reig'</span><span class="p">)</span>

<span class="c1"># Output: Hola Marcel Reig!
</span></code></pre></div></div>

<h2 id="par√°metros-por-defecto">Par√°metros por defecto</h2>

<p>Python nos permite definir par√°metros por defecto con el operador de asignaci√≥n <code class="language-plaintext highlighter-rouge">=</code>. Si a√±adimos un par√°metro el valor por defecto se sobreescribir√° con el nuevo valor.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">greeting</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s">'John'</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">f'Hello, </span><span class="si">{</span><span class="n">name</span><span class="si">}</span><span class="s">!'</span><span class="p">)</span>


<span class="n">greeting</span><span class="p">()</span>
<span class="c1"># Output: Hello, John! 
</span><span class="n">greeting</span><span class="p">(</span><span class="s">'Marcel'</span><span class="p">)</span>
<span class="c1"># Output: Hello, Marcel!
</span></code></pre></div></div>
:ET