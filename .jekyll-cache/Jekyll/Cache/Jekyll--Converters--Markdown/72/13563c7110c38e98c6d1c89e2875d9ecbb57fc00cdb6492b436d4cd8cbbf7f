I")<h3 class="lead my-5" id="la-desestructuraci√≥n-nos-permite-asignar-las-propiedades-de-un-array-en-javascript-o-de-una-lista-o-en-python-a-variables-individuales">La desestructuraci√≥n nos permite asignar las propiedades de un array en JavaScript o de una lista o en Python a variables individuales.</h3>

<h3 class="lead my-5" id="de-hecho-la-desestructuraci√≥n-no-se-limita-a-listas-tambi√©n-puedes-desestructurar-tuplas-y-cadenas">De hecho la desestructuraci√≥n no se limita a listas tambi√©n puedes desestructurar tuplas y cadenas.</h3>

<div class="alert alert-info" role="alert">
<p><i class="fas fa-sticky-note"></i> Nota:</p>
 <p>En Python a desestructurar tambi√©n se le llama desempaquetar.</p>
</div>

<h2 id="desestructuraci√≥n-en-python">Desestructuraci√≥n en Python</h2>

<p>Python permite asignar m√°s de una variable al mismo tiempo y en una sola l√≠nea de c√≥digo. Solo necesitas a√±adir el mismo n√∫mero de valores a cada lado de la asignaci√≥n, los valores son asignados seg√∫n el orden, el primero con el primero, el segundo con el segundo etc‚Ä¶</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="c1"># Output: 1
</span>
<span class="k">print</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>

<span class="c1"># Output: 2
</span></code></pre></div></div>

<p>Si intentas a√±adir m√°s valores de los que hay en el iterable obtendr√°s un error:</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">,</span> <span class="n">d</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>

<span class="c1"># ValueError: not enough values to unpack (expected 4, got 2)
</span></code></pre></div></div>

<h3 id="desestructurar-una-lista-en-python">Desestructurar una lista en Python</h3>

<p>Puedes desempaquetar una lista sin saber cuantos elementos contiene utilizando el asterisco <code class="language-plaintext highlighter-rouge">*</code>.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">el_primero</span><span class="p">,</span> <span class="o">*</span><span class="n">el_resto</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="n">el_primero</span><span class="p">)</span>

<span class="c1"># Output: 1
</span>
<span class="k">print</span><span class="p">(</span><span class="n">el_resto</span><span class="p">)</span>

<span class="c1"># Output: [2, 3, 4, 5]
</span></code></pre></div></div>

<h3 id="ignorar-valores-en-la-asignaci√≥n-al-desestructurar">Ignorar valores en la asignaci√≥n al desestructurar</h3>

<p>Puedes ingorar valores al desestructurar utilizando un gui√≥n bajo <code class="language-plaintext highlighter-rouge">_</code>.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">nombre</span><span class="p">,</span> <span class="n">_</span><span class="p">,</span> <span class="n">segundo_apellido</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Alvaro'</span><span class="p">,</span> <span class="s">'Reyes'</span><span class="p">,</span> <span class="s">'Guerrero'</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="n">nombre</span><span class="p">)</span>

<span class="c1"># Output: Alvaro
</span>
<span class="k">print</span><span class="p">(</span><span class="n">segundo_apellido</span><span class="p">)</span>

<span class="c1"># Output: Guerrero
</span></code></pre></div></div>

<h3 id="ignorar-m√∫ltiples-valores">Ignorar m√∫ltiples valores</h3>

<p>Puedes ignorar m√∫ltiples valores con la siguiente sintaxis <code class="language-plaintext highlighter-rouge">*_</code>.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="p">,</span> <span class="o">*</span><span class="n">_</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="c1"># Output: 1
</span></code></pre></div></div>

<p>Ignorar todos los valores menos el primero y el</p>
<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="n">a</span><span class="p">,</span> <span class="o">*</span><span class="n">_</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>
 <span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>

 <span class="c1"># Output: 1 5
</span></code></pre></div></div>
<h2 id="desestructuraci√≥n-en-javascript">Desestructuraci√≥n en JavaScript</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="p">[</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">]</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span>

<span class="c1">// Output: 2</span>
</code></pre></div></div>

<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment">Referencia</a></p>
:ET