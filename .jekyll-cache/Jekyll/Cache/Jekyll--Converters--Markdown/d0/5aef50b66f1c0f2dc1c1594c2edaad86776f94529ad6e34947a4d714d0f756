I"8
<h3 class="lead my-5" id="las-funciones-lambda-son-funciones-anónimas-es-decir-que-no-tienen-nombre-las-funciones-lambda-se-expresan-en-una-sola-declaración">Las funciones lambda son funciones anónimas, es decir que no tienen nombre. Las funciones lambda se expresan en una sola declaración.</h3>

<h3 class="lead mb-5" id="puedes-utilizar-funciones-lambda-en-lugar-de-funciones-normales-cuando-la-función-es-pequeña-para-funciones-complejas-siempre-utilizaremos-la-sintaxis-normal">Puedes utilizar funciones lambda en lugar de funciones normales cuando la función es pequeña, para funciones complejas siempre utilizaremos la sintaxis normal.</h3>

<p>Las funciones lambda no se definen con la palabra clave <code class="language-plaintext highlighter-rouge">def</code> como las funciones normales. Se definen con la palabra clave <code class="language-plaintext highlighter-rouge">lambda</code>.</p>

<h2 id="ejemplo-de-función-lambda">Ejemplo de función lambda</h2>

<p>Función lambda que recoge el nombre y el apellido.
En el siguiente ejemplo definimos la función con la palabra clave <code class="language-plaintext highlighter-rouge">lambda</code> añadimos sus parámetros separados por comas, en este caso first y last y después de los dos puntos <code class="language-plaintext highlighter-rouge">:</code> viene la expresión de la función en este caso recogemos los dos parámetros en una cadena, sin necesidad de escribir <code class="language-plaintext highlighter-rouge">return</code>.</p>

<p>Para poder utilizar la función hay que guardarla en una variable en este caso la variable full_name.</p>

<p>Ahora sí ya puedes llamar a la función como</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">full_name</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">first</span><span class="p">,</span> <span class="n">last</span><span class="p">:</span> <span class="s">f'</span><span class="si">{</span><span class="n">first</span><span class="si">}</span><span class="s"> </span><span class="si">{</span><span class="n">last</span><span class="si">}</span><span class="s">'</span>


<span class="k">print</span><span class="p">(</span><span class="n">full_name</span><span class="p">(</span><span class="s">'Marcel'</span><span class="p">,</span> <span class="s">'Reig'</span><span class="p">))</span>

<span class="c1"># Output: Marcel Reig
</span></code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>
:ET