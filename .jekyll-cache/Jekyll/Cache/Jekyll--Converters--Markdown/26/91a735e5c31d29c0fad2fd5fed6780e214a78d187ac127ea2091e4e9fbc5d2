I"뇏<h3 class="lead my-5" id="las-listas-son-una-secuencia-ordenada-de-elementos-a-diferencia-de-la-tuplas-las-listas-son-mutables-podemos-a침adir-eliminar-mover-y-cambiar-items-de-lista-a-nuestro-antojo">Las listas son una secuencia ordenada de elementos, a diferencia de la tuplas las listas son mutables, podemos a침adir, eliminar, mover y cambiar items de lista a nuestro antojo.</h3>

<p>Las listas se crean a침adiendo elementos separados por comas entre <code class="language-plaintext highlighter-rouge">[ ]</code> corchetes:</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'lim칩n'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">)</span>
<span class="c1"># Output: ['chocolate', 'lim칩n', 'mango']
</span></code></pre></div></div>

<p>A los elementos de una lista se accede por su 칤ndice, de igual modo que accedemos a los car치cteres de una cadena:</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'lim칩n'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
<span class="c1"># Output: mango
</span></code></pre></div></div>

<p>Si no te gusta el mango, siempre puedes cambiarlo por fresas silvestres, asign치ndole el nuevo valor a trav칠s de su 칤ndice:</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'lim칩n'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>
<span class="n">helados</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="s">'fresas silvestres'</span>
<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">)</span>
<span class="c1"># Output: ['chocolate', 'lim칩n', 'fresas silvestres']
</span></code></pre></div></div>

<p>Otra opci칩n ser칤a utilizar la palabra clave <code class="language-plaintext highlighter-rouge">del</code> para eliminar mango de la lista:</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'lim칩n'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>
<span class="k">del</span> <span class="n">helados</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">)</span> <span class="c1"># Output: ['chocolate', 'lim칩n']
</span></code></pre></div></div>

<p>Python nos permite crear listas anidadas.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">nested_list</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">],</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">]]</span>

<span class="k">print</span><span class="p">(</span><span class="n">nested_list</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">])</span>  <span class="c1"># Output: 2
</span>
<span class="k">print</span><span class="p">(</span><span class="n">nested_list</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>  <span class="c1"># Output: 6
</span></code></pre></div></div>

<p>Para acceder al 칰ltimo elemento de una lista utilizamos el 칤ndice negativo  <code class="language-plaintext highlighter-rouge">[-1]</code>.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'lim칩n'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>  <span class="c1"># Output: mango
</span></code></pre></div></div>

<p>Para saber cuantos elementos tiene una lista utilizamos la funci칩n predefinida <code class="language-plaintext highlighter-rouge">len</code>.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'lim칩n'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">helados</span><span class="p">))</span>  <span class="c1"># Output: 3
</span></code></pre></div></div>

<h2 id="slice-en-python">Slice en Python</h2>

<p>Nos permite obtener un rango de elementos de una lista. Los valores del rango se especifican entre corchetes, separados por dos puntos. <code class="language-plaintext highlighter-rouge">[inicio:fin]</code> El primer valor indica el inicio del rango y el segundo el f칤n.</p>

<div class="alert alert-info" role="alert">
<p><i class="fas fa-sticky-note"></i> Nota:</p>
 <p>Recuerda que las listas igual que las cadenas van en 칤ndice <code>0</code>.</p>
</div>

<p>El primer valor es (inclusivo) el segundo es (exclusivo), <code class="language-plaintext highlighter-rouge">[1:3]</code> retorna el segundo y el tercer elemento de una lista.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">chocolates</span> <span class="o">=</span> <span class="p">[</span>
    <span class="s">'chocolate belga'</span><span class="p">,</span>
    <span class="s">'chocolate blanco'</span><span class="p">,</span>
    <span class="s">'chocolate &amp; chili'</span><span class="p">,</span>
    <span class="s">'selva negra'</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="n">chocolates</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">3</span><span class="p">])</span>

<span class="c1"># Output: ['chocolate blanco', 'chocolate &amp; chili']
</span></code></pre></div></div>

<p>Si el rango que quieres obtener empieza desde el principio de la lista, no es necesario que especif칤ques el primer valor <code class="language-plaintext highlighter-rouge">[:2]</code>.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">chocolates</span> <span class="o">=</span> <span class="p">[</span>
    <span class="s">'chocolate belga'</span><span class="p">,</span>
    <span class="s">'chocolate blanco'</span><span class="p">,</span>
    <span class="s">'chocolate &amp; chili'</span><span class="p">,</span>
    <span class="s">'selva negra'</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="n">chocolates</span><span class="p">[:</span><span class="mi">2</span><span class="p">])</span>
<span class="c1"># Output: ['chocolate belga', 'chocolate blanco']
</span></code></pre></div></div>

<p>Del mismo modo, si el rango que quieres obtener llega hasta el final de la lista no es necesario que especif칤ques el segundo valor <code class="language-plaintext highlighter-rouge">[2:]</code>.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">chocolates</span> <span class="o">=</span> <span class="p">[</span>
    <span class="s">'chocolate belga'</span><span class="p">,</span>
    <span class="s">'chocolate blanco'</span><span class="p">,</span>
    <span class="s">'chocolate &amp; chili'</span><span class="p">,</span>
    <span class="s">'selva negra'</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="n">chocolates</span><span class="p">[</span><span class="mi">2</span><span class="p">:])</span>
<span class="c1"># Output: ['chocolate &amp; chili', 'selva negra']
</span></code></pre></div></div>

<p>Tambi칠n puedes utilizar 칤ndices negativos. Con <code class="language-plaintext highlighter-rouge">[-3:]</code> obtienes los 칰ltimos 3 elementos de la lista.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">chocolates</span> <span class="o">=</span> <span class="p">[</span>
    <span class="s">'chocolate belga'</span><span class="p">,</span>
    <span class="s">'chocolate blanco'</span><span class="p">,</span>
    <span class="s">'chocolate &amp; chili'</span><span class="p">,</span>
    <span class="s">'selva negra'</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="n">chocolates</span><span class="p">[</span><span class="o">-</span><span class="mi">3</span><span class="p">:])</span>
<span class="c1"># Output:
</span><span class="s">"""
['chocolate blanco',
'chocolate &amp; chili',
'selva negra']
"""</span>
</code></pre></div></div>

<p><strong>Slice</strong> acepta un tercer par치metro <code class="language-plaintext highlighter-rouge">[star:stop:step]</code>.
Si se omite, el valor por defecto de <code class="language-plaintext highlighter-rouge">step</code> es 1.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">chocolates</span> <span class="o">=</span> <span class="p">[</span>
    <span class="s">'chocolate'</span><span class="p">,</span>
    <span class="s">'tiramis칰'</span><span class="p">,</span>
    <span class="s">'pistacho'</span><span class="p">,</span>
    <span class="s">'vainilla'</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="n">chocolates</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">4</span><span class="p">:</span><span class="mi">2</span><span class="p">])</span>

<span class="c1"># Output: ['chocolate', 'pistacho']
</span></code></pre></div></div>

<h2 id="iiterar-una-lista-con-for-in-en-python">Iiterar una lista con for in en Python</h2>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">chocolates</span> <span class="o">=</span> <span class="p">[</span>
    <span class="s">'chocolate belga'</span><span class="p">,</span>
    <span class="s">'chocolate blanco'</span><span class="p">,</span>
    <span class="s">'chocolate &amp; chili'</span><span class="p">,</span>
    <span class="s">'selva negra'</span><span class="p">]</span>

<span class="k">for</span> <span class="n">chocolate</span> <span class="ow">in</span> <span class="n">chocolates</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">chocolate</span><span class="p">)</span>

<span class="c1"># Output:
</span><span class="s">"""
chocolate belga
chocolate blanco
chocolate &amp; chili
selva negra
"""</span>
</code></pre></div></div>

<h2 id="a침adir-un-nuevo-elemento-a-una-lista-en-python">A침adir un nuevo elemento a una lista en Python</h2>

<p>El m칠todo <code class="language-plaintext highlighter-rouge">append()</code> a침ade un elemento al final de la lista.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'lim칩n'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">)</span>
<span class="c1"># Output: ['chocolate', 'lim칩n', 'mango']
</span>
<span class="n">helados</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">'pistacho'</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">)</span>
<span class="c1"># Output:
# ['chocolate', 'lim칩n', 'mango', 'pistacho']
</span></code></pre></div></div>

<p>El m칠todo <code class="language-plaintext highlighter-rouge">extend()</code> tambi칠n es para a침adir un nuevo elemento a la lista.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'lim칩n'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>

<span class="n">helados</span><span class="p">.</span><span class="n">extend</span><span class="p">([</span><span class="s">'nata'</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">)</span>

<span class="c1"># Output:
# ['chocolate', 'lim칩n', 'mango', 'nata']
</span></code></pre></div></div>

<div class="alert alert-info" role="alert">
<p><i class="fas fa-sticky-note"></i> Nota:</p>
 <p>La diferencia entre <code>append</code> y <code>.&lt;/p&gt;
&lt;/div&gt;


A침adir un nuevo elemento a una lista y guardar la lista en una variable __sin modificar la lista original__: 

```py
helados = ['chocolate', 'lim칩n', 'mango']

# New List
new_helados = helados + (['nata'])
print(new_helados)

#  Output: ['chocolate', 'lim칩n', 'mango', 'nata']
```

## M칠todos de las listas en Python

`append()` A침ade un elemento al final de la lista.

`clear()` Elimina todos los elementos de la lista. El m칠todo clear() no retorna ning칰n valor, solo una lista vac칤a.

`extend()` Para a침adir un nuevo elemento a la lista.

```py
helados = ['chocolate', 'lim칩n', 'mango']

helados.extend(['nata'])
print(helados)

# Output:
# ['chocolate', 'lim칩n', 'mango', 'nata']
```

`count()` Cuenta el n칰mero de veces que aparece un 칤tem en una lista.

```py
ice_cream_stock = [
    "Vainilla",
    "Chocolate",
    "Vainilla",
    "Lim칩n"
]

flavour_counter = ice_cream_stock.count("Vainilla")

print(f'Quedan {flavour_counter} helados de Vinilla!')

#  Output: Quedan 2 helados de Vinilla!
```

`index()` Utilizamos este m칠todo para saber en que 칤ndice se encuentra un elemento en una lista.

```py
helados = ['chocolate', 'lim칩n', 'mango']
print(helados.index('lim칩n'))  # Output: 1
```

`insert()` Inserta un elemento de lista en el 칤ndice especificado.

```py
helados = ['chocolate', 'lim칩n', 'mango']
print(helados)
# Output: ['chocolate', 'lim칩n', 'mango']

helados.insert(1, 'vainilla')

print(helados)
# Output: ['chocolate', 'vainilla', 'lim칩n', 'mango']
```

`pop()` Elimina el 칰ltimo elemento de la lista, pero no se limita a eso, tambi칠n lo retorna por lo que podemos guardarlo en una variable.

```py
helados = ['chocolate', 'lim칩n', 'mango']
ultimo_helado = helados.pop()
print(ultimo_helado) # Output: mango
print(helados) # Output: ['chocolate', 'lim칩n']
```

`remove()` Si no te gusta el mango puedes utilizar este m칠todo para eliminarlo de la lista.

```py
helados = ['chocolate', 'lim칩n', 'mango']
helados.remove('mango')
print(helados) # Output: ['chocolate', 'lim칩n']
```

`sort()` Ordena los 칤tems de lista alfab칠ticamente.

```py
helados = ['caf칠', 'straciatella', 'avellana']
helados.sort()
print(helados)
# Output:  ['avellana', 'caf칠', 'straciatella']
```

`reverse()` Invierte los elementos de la lista original.

Combinando los m칠todos `sort()` y `reverse()` podemos ordenar una lista de Z a A.

```py
helados = ['caf칠', 'straciatella', 'avellana']

helados.sort(reverse=True)

print(helados)
# Output:  ['straciatella', 'caf칠', 'avellana']
```

## Tuplas

Las tuplas son una secuencia de items ordenada, igual que las listas, la diferencia es que las tuplas son inmutables.

Las tuplas una vez creadas no se pueden modificar.

Las tuplas se definen con parentesis `()` mientras que las listas se definen con corchetes `[]`. 

```py
inmutable_list = (36, 'bizcocho', 4+7)

print(inmutable_list)

# Output: (36, 'bizcocho', 11)
```
</code></p></div>
:ET