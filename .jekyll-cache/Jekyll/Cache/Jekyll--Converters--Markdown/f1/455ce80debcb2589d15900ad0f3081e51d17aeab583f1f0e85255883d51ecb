I"◊?<h3 class="lead" id="python-es-un-lenguaje-de-prop√≥sito-general-con-una-sintaxis-limpia-y-sencilla-por-lo-que-es-una-buena-elecci√≥n-para-aprender-a-programar">Python es un lenguaje de prop√≥sito general con una sintaxis limpia y sencilla, por lo que es una buena elecci√≥n para aprender a programar.</h3>

<h3 class="lead" id="python-fue-creado-en-los-90-por-guido-van-rossum-su-nombre-viene-de-los-humoristas-britanicos-monty-python">Python fue creado en los 90 por <a href="https://twitter.com/gvanrossum?s=20" target="\_blank">Guido van Rossum</a>, su nombre viene de los humoristas britanicos Monty Python.</h3>

<h3 class="lead mb-5" id="si-quieres-cear-aplicaciones-web-en-python-puedes-utilizar-algunso-de-sus-frameworks-django-o-flask">Si quieres cear aplicaciones web en Python puedes utilizar algunso de sus frameworks <a href="https://www.djangoproject.com/" target="\_blank">django</a> o <a href="https://flask.palletsprojects.com/en/2.0.x/" target="\_blank">Flask</a>.</h3>

<h2 id="caracter√≠sticas-principales-del-lenguaje">Caracter√≠sticas principales del lenguaje</h2>

<ul>
  <li>Es un <strong>lenguaje interpretado</strong>, no compilado.</li>
  <li>Usa <strong>tipado din√°mico</strong>, una variable puede tomar valores de distinto tipo.</li>
  <li>Es <strong>fuertemente tipado</strong>, el tipo no cambia de manera repentina. Para que se produzca un cambio de tipo se tiene que hacer una conversi√≥n expl√≠cita.</li>
  <li>Es <strong>multiplataforma</strong>, el mismo c√≥digo funciona en macOS, Windows y Linux.</li>
</ul>

<h2 id="empezar-a-programar-en-python">Empezar a programar en Python</h2>

<p>Si quieres empezar a hacer pruebas r√°pidamente sin instalar Python en tu computadora puedes hacerlo en <a href="https://replit.com/" target="\_blank">replit</a> o <a href="https://www.anyfiddle.com/">anyfidle</a>, son herrramientas tipo codepen o jsbin pero en las que puedes programar en Python.</p>

<p>Para instalar Python ves a <a href="https://www.python.org/" target="\_blank">python.org</a> y descarga la versi√≥n de Python para tu sistema operativo.</p>

<p>Para instalar Python en Mac te recomiendo seguir el <a href="https://www.freecodecamp.org/news/python-version-on-mac-update/" target="\_blank">tutorial de Quincy Larson</a> en freeCodeCamp.</p>

<p>Una vez instalado Python en tu computadora abre la terminal y escribe <code class="language-plaintext highlighter-rouge">python3</code>, esto te abrir√° un interprete de Phyton en el que ya puedes ejecutar funciones de Python.</p>

<p><img src="/assets/images/blog/python-term.png" width="800" class="img-fluid text-center m-xl-auto" alt="python" /></p>

<h2 id="descargar-un-entorno-de-programaci√≥n">Descargar un entorno de programaci√≥n</h2>

<p>Descarga <a href="https://www.jetbrains.com/es-es/pycharm/download/" target="\_blank">pycharm</a> la versi√≥n <strong>Community</strong> que es gratis.</p>

<p>Tambi√©n puedes desarrollar en Python con <a href="https://code.visualstudio.com/" target="\_blank">Visual Studio Code</a> y la <a href="https://marketplace.visualstudio.com/items?itemName=ms-python.python" target="\_blank">extensi√≥n de Python</a> de Microsoft.</p>

<h2 id="indentaci√≥n">Indentaci√≥n</h2>

<p>Python utiliza la indentaci√≥n para indicar el inicio y f√≠n de un bloque de c√≥digo.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">saludar</span><span class="p">(</span><span class="n">first_name</span><span class="p">,</span> <span class="n">last_name</span><span class="p">):</span>
    <span class="k">return</span><span class="p">(</span><span class="s">"Hi "</span> <span class="o">+</span> <span class="n">first_name</span> <span class="o">+</span> <span class="s">" "</span> <span class="o">+</span> <span class="n">last_name</span> <span class="o">+</span> <span class="s">"!"</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">saludar</span><span class="p">(</span><span class="s">"Ana"</span><span class="p">,</span> <span class="s">"Toledo"</span><span class="p">))</span>
</code></pre></div></div>

<h2 id="comentarios">Comentarios</h2>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Comentario de una l√≠nea
</span></code></pre></div></div>

<p>Los comentarios de varias l√≠neas se hacen con 3 comillas dobles o simples al inicio y al final del comentario.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">'''
Comentario
de varias
l√≠neas
'''</span>
</code></pre></div></div>

<h2 id="variables">Variables</h2>

<p>Las variables nos permiten guardar valores que m√°s tarde podemos utilizar en nuestro c√≥digo.
Las variables pueden guardar cualquier tipo de dato, enteros, flotantes, booleanos y cadenas o Strings, tambi√©n podemos guardar listas y tuplas.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mascota</span> <span class="o">=</span> <span class="s">"Perro"</span> <span class="c1"># string
</span><span class="n">raza_peligrosa</span> <span class="o">=</span> <span class="bp">True</span> <span class="c1"># booleano
</span><span class="n">edad</span> <span class="o">=</span> <span class="mi">2</span> <span class="c1"># entero
</span></code></pre></div></div>

<h2 id="tipos-de-datos">Tipos de datos</h2>

<ul>
  <li>Booleanos</li>
  <li>N√∫meros</li>
  <li>Cadenas</li>
  <li>Listas</li>
  <li>Tuplas</li>
  <li>Diccionarios</li>
  <li>set</li>
  <li>Mutables e Inmutables</li>
</ul>

<h2 id="trabajando-con-cadenas-en-python">Trabajando con cadenas en Python</h2>

<h2 id="trabajando-con-listas-en-python">Trabajando con listas en Python</h2>

<p>Una lista es una secuencia ordenada de elementos, las listas no son inmutables, podemos a√±adir, eliminar, mover y cambiar items de lista a nuestro antojo.
Las listas se crean a√±adiendo valores entre <code class="language-plaintext highlighter-rouge">[ ]</code> corchetes.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'limon'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">)</span>
<span class="c1"># ['chocolate', 'limon', 'mango']
</span>
<span class="n">helados</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">'vainilla'</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">)</span>
<span class="c1"># ['chocolate', 'vainilla', 'limon', 'mango']
</span>
<span class="n">helados</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">'pistacho'</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">)</span>
<span class="c1"># ['chocolate', 'vainilla', 'limon', 'mango', 'pistacho']
</span>
</code></pre></div></div>

<p>Podemos acceder a los valores de lista por su √≠ndice igual que en las cadenas.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'limon'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
<span class="c1"># mango
</span></code></pre></div></div>

<p>Si no te gusta el mango siempre puedes cambiarlo por fresas silvestres.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'limon'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>
<span class="n">helados</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="s">'fresas silvestres'</span>
<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">)</span>
<span class="c1"># ['chocolate', 'limon', 'fresas silvestres']
</span></code></pre></div></div>

<p>Eliminar elementos de lista.</p>

<pre><code class="language-y">
## Trabajando con tuples en Python

## Trabajando con n√∫meros en Python

Operadores aritm√©ticos en Python

&lt;table class="table table-bordered"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th scope="col"&gt;Operador &lt;/th&gt;
      &lt;th scope="col"&gt;Descripci√≥n &lt;/th&gt;
      &lt;th scope="col"&gt;Uso &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th scope="row"&gt;+&lt;/th&gt;
      &lt;td&gt;Suma&lt;/td&gt;
      &lt;td&gt;5 + 5 = 10 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th scope="row"&gt;-&lt;/th&gt;
      &lt;td&gt;Resta&lt;/td&gt;
      &lt;td&gt;4 - 3 = 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th scope="row"&gt;*&lt;/th&gt;
      &lt;td&gt;Multiplicaci√≥n&lt;/td&gt;
      &lt;td&gt;8 * 2 = 16&lt;/td&gt;
    &lt;/tr&gt;
        &lt;tr&gt;
      &lt;th scope="row"&gt;/&lt;/th&gt;
      &lt;td&gt;Divisi√≥n&lt;/td&gt;
      &lt;td&gt;16 / 2 = 8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th scope="row"&gt;%&lt;/th&gt;
      &lt;td&gt;M√≥dulo&lt;/td&gt;
      &lt;td&gt;16 % 3 = 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th scope="row"&gt;**&lt;/th&gt;
      &lt;td&gt;Exponente&lt;/td&gt;
      &lt;td&gt;12 ** 3 = 1728&lt;/td&gt;
    &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th scope="row"&gt;//&lt;/th&gt;
      &lt;td&gt;Divisi√≥n entera&lt;/td&gt;
      &lt;td&gt;18 // 5 = 3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

## Funci√≥n print()

## Condicionales

```py
es_barato = True
es_bueno = True

if es_barato and es_bueno:
    print("Toma mo dinero!")
elif es_barato and not es_bueno:
    print("Eres barato pero no eres bueno")
elif not es_barato and es_bueno:
    print("Eres bueno pero no eres barato")
else:
    print("Eres una estafa")
</code></pre>

<p>Con los condicionales en Python puedes construir cosas tan geniales como una peque√±a calculadora.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">num1</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">"Introduce un n√∫mero: "</span><span class="p">))</span>
<span class="n">op</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Introduce un operador: "</span><span class="p">)</span>
<span class="n">num2</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">"Introduce el segundo n√∫mero: "</span><span class="p">))</span>

<span class="k">if</span> <span class="n">op</span> <span class="o">==</span> <span class="s">'+'</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">num1</span> <span class="o">+</span> <span class="n">num2</span><span class="p">)</span>
<span class="k">elif</span> <span class="n">op</span> <span class="o">==</span> <span class="s">'-'</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">num1</span> <span class="o">-</span> <span class="n">num2</span><span class="p">)</span>
<span class="k">elif</span> <span class="n">op</span> <span class="o">==</span> <span class="s">'/'</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">num1</span> <span class="o">/</span> <span class="n">num2</span><span class="p">)</span>
<span class="k">elif</span> <span class="n">op</span> <span class="o">==</span> <span class="s">'*'</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">num1</span> <span class="o">*</span> <span class="n">num2</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'Introduce un operador v√°lido'</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="iteraciones-en-python">Iteraciones en Python</h2>

<ul>
  <li>While</li>
  <li>For</li>
</ul>

<h2 id="funciones-en-python">Funciones en Python</h2>

<p>Las funciones en Python se crean mediante la instrucci√≥n <code class="language-plaintext highlighter-rouge">def</code>m√°s el nombre de la funci√≥n.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">my_function</span><span class="p">(</span><span class="n">param1</span><span class="p">,</span> <span class="n">param2</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="n">param1</span> <span class="o">+</span> <span class="n">param2</span><span class="p">)</span>
</code></pre></div></div>

<p>Para invocar la funci√≥n escribimos el nombre de la funci√≥n m√°s par√©ntesis y los par√°metros de la funci√≥n si los tiene.
No todas las funciones tienen que tener par√°metros.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">my_function</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span> <span class="c1"># 10
</span></code></pre></div></div>
<h2 id="funciones-lambda">Funciones lambda</h2>

<p>Las funciones normales en Python se definen con <code class="language-plaintext highlighter-rouge">def</code>.
Las funciones anonimas en Python se definen con <code class="language-plaintext highlighter-rouge">lambda</code>.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Funci√≥n normal
</span><span class="k">def</span> <span class="nf">myfunc</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">):</span>
    <span class="n">result</span> <span class="o">=</span> <span class="n">x</span> <span class="o">+</span> <span class="n">y</span> <span class="o">+</span> <span class="n">z</span>
    <span class="k">return</span> <span class="n">result</span>

<span class="k">print</span><span class="p">(</span><span class="n">myfunc</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">))</span> <span class="c1"># 9
</span></code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Funci√≥n lambda
</span><span class="n">result2</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">:</span> <span class="n">x</span> <span class="o">+</span> <span class="n">y</span> <span class="o">+</span> <span class="n">z</span>

<span class="k">print</span><span class="p">(</span><span class="n">result2</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">))</span> <span class="c1"># 9
</span></code></pre></div></div>

<h2 id="diccionarios">Diccionarios</h2>

<h2 id="clases-y-objetos">Clases y objetos</h2>
:ET