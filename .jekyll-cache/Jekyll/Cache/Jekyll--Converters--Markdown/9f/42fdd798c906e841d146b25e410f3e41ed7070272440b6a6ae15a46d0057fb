I"±3<h2 id="listas">Listas</h2>

<p>Una lista es una secuencia ordenada de elementos, las listas no son inmutables, podemos a√±adir, eliminar, mover y cambiar items de lista a nuestro antojo.
Las listas se crean a√±adiendo valores separados por comas entre <code class="language-plaintext highlighter-rouge">[ ]</code> corchetes.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'lim√≥n'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">)</span>
<span class="c1"># Output: ['chocolate', 'lim√≥n', 'mango']
</span>
<span class="n">helados</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">'vainilla'</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">)</span>
<span class="c1"># Output: ['chocolate', 'vainilla', 'lim√≥n', 'mango']
</span>
<span class="n">helados</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">'pistacho'</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">)</span>
<span class="c1"># Output: ['chocolate', 'vainilla', 'lim√≥n', 'mango', 'pistacho']
</span>
</code></pre></div></div>

<p>Podemos acceder a los valores de lista por su √≠ndice igual que en las cadenas.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'lim√≥n'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
<span class="c1"># Output: mango
</span></code></pre></div></div>

<p>Si no te gusta el mango siempre puedes cambiarlo por fresas silvestres asign√°ndole otro valor a trav√©s de su √≠ndice.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'lim√≥n'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>
<span class="n">helados</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="s">'fresas silvestres'</span>
<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">)</span>
<span class="c1"># Output: ['chocolate', 'lim√≥n', 'fresas silvestres']
</span></code></pre></div></div>

<p>Otro m√©todo que tenemos disponible para eliminar elementos de lista en Python es <code class="language-plaintext highlighter-rouge">.pop()</code>.
Si vienes de JavaScript este m√©todo ya te sonar√°.
<code class="language-plaintext highlighter-rouge">.pop()</code> lo que hace es eliminar el √∫ltimo elemento de la lista pero no solo eso, tambi√©n lo retorna por lo que podemos guardarlo en una variable.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'lim√≥n'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>
<span class="n">ultimo_helado</span> <span class="o">=</span> <span class="n">helados</span><span class="p">.</span><span class="n">pop</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">ultimo_helado</span><span class="p">)</span> <span class="c1"># Output: mango
</span><span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">)</span> <span class="c1"># Output: ['chocolate', 'lim√≥n']
</span></code></pre></div></div>

<p>Tambi√©n puedes utilizar la palabra clave <code class="language-plaintext highlighter-rouge">del</code> para eliminar elementos de lista.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'lim√≥n'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>
<span class="k">del</span> <span class="n">helados</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">)</span> <span class="c1"># Output: ['chocolate', 'lim√≥n']
</span></code></pre></div></div>

<p>Python nos permite crear listas de listas o listas anidadas.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">nested_list</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">],</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">]]</span>

<span class="k">print</span><span class="p">(</span><span class="n">nested_list</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">])</span>  <span class="c1"># Output: 2
</span>
<span class="k">print</span><span class="p">(</span><span class="n">nested_list</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>  <span class="c1"># Output: 6
</span></code></pre></div></div>

<p>Para acceder al √∫ltimo elemento de la lista utilizamos el indice negativo  <code class="language-plaintext highlighter-rouge">[-1]</code>.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'lim√≥n'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>  <span class="c1"># Output: mango
</span></code></pre></div></div>

<p>Para saber cuantos elementos tiene una lista utilizamos la funci√≥n predefinida de Python <code class="language-plaintext highlighter-rouge">len</code>.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'lim√≥n'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">helados</span><span class="p">))</span>  <span class="c1"># Output: 3
</span></code></pre></div></div>

<p>Para saber en que √≠ndice se encuentra un elemento en una lista utilizamos el m√©todo <code class="language-plaintext highlighter-rouge">.index()</code>.</p>
<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'lim√≥n'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="s">'lim√≥n'</span><span class="p">))</span>  <span class="c1"># Output: 1
</span></code></pre></div></div>

<p><strong>M√©todos de las listas</strong></p>

<p><code class="language-plaintext highlighter-rouge">append()</code></p>

<p><code class="language-plaintext highlighter-rouge">clear()</code></p>

<p><code class="language-plaintext highlighter-rouge">extend()</code></p>

<p><code class="language-plaintext highlighter-rouge">count()</code></p>

<p><code class="language-plaintext highlighter-rouge">index()</code></p>

<p><code class="language-plaintext highlighter-rouge">insert()</code></p>

<p><code class="language-plaintext highlighter-rouge">pop()</code></p>

<p><code class="language-plaintext highlighter-rouge">remove()</code> Si simplemente odias el mango y no quieres a√±adir ning√∫n otro sabor, puedes utilizar el m√©todo  <code class="language-plaintext highlighter-rouge">.remove()</code> para eliminarlo de la lista.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'chocolate'</span><span class="p">,</span> <span class="s">'lim√≥n'</span><span class="p">,</span> <span class="s">'mango'</span><span class="p">]</span>
<span class="n">helados</span><span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="s">'mango'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">)</span> <span class="c1"># Output: ['chocolate', 'lim√≥n']
</span></code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">sort()</code> ordena los √≠tems de lista alfab√©ticamente.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'caf√©'</span><span class="p">,</span> <span class="s">'straciatella'</span><span class="p">,</span> <span class="s">'avellana'</span><span class="p">]</span>
<span class="n">helados</span><span class="p">.</span><span class="n">sort</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">)</span>
<span class="c1"># Output:  ['avellana', 'caf√©', 'straciatella']
</span></code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">reverse()</code> invierte los elementos de la lista original.</p>

<p>Combinando los m√©todos <code class="language-plaintext highlighter-rouge">sort()</code> y <code class="language-plaintext highlighter-rouge">reverse()</code> podemos ordenar una lista de Z a A.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">helados</span> <span class="o">=</span> <span class="p">[</span><span class="s">'caf√©'</span><span class="p">,</span> <span class="s">'straciatella'</span><span class="p">,</span> <span class="s">'avellana'</span><span class="p">]</span>

<span class="n">helados</span><span class="p">.</span><span class="n">sort</span><span class="p">(</span><span class="n">reverse</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">helados</span><span class="p">)</span>
<span class="c1"># Output:  ['straciatella', 'caf√©', 'avellana']
</span></code></pre></div></div>

<h2 id="tuplas">Tuplas</h2>

<p>Las tuplas son una secuencia de items ordenada, igual que las listas, la diferencia es que las tuplas son inmutables.</p>

<p>Las tuplas una vez creadas no se pueden modificar.</p>

<p>Las tuplas se definen con parentesis <code class="language-plaintext highlighter-rouge">()</code> mientras que las listas se definen con corchetes <code class="language-plaintext highlighter-rouge">[]</code>.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">inmutable_list</span> <span class="o">=</span> <span class="p">(</span><span class="mi">36</span><span class="p">,</span> <span class="s">'bizcocho'</span><span class="p">,</span> <span class="mi">4</span><span class="o">+</span><span class="mi">7</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">inmutable_list</span><span class="p">)</span>

<span class="c1"># Output: (36, 'bizcocho', 11)
</span></code></pre></div></div>
:ET