I"<h3 class="lead my-5" id="las-listas-por-comprensión-del-inglés-list-comrehension-son-una-manera-elegante-de-de-definir-y-crear-listas-en-una-sola-línea">Las listas por comprensión del inglés <code class="language-plaintext highlighter-rouge">List Comrehension</code> son una manera elegante de de definir y crear listas en una sola línea.</h3>

<p>La compresión dde listas se utiliza a menudo para trabajar sobre listas ya creadas y para utilizar una sintaxis más reducida de lo que que podríamos hacer un un</p>

<p>Veamos como crearíamos una lista con los cuadrados de los números del 1 al 10 con un bucle for:</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">squares</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">11</span><span class="p">):</span>
    <span class="n">squares</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">i</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span>
    
<span class="k">print</span><span class="p">(</span><span class="n">squares</span><span class="p">)</span>

<span class="c1">#Output: [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
</span></code></pre></div></div>

<p>Ahora veamos como crearíamos la misma lista de una forma más elegante y en una sola línea utilizando la sintaxis de comprensión de listas:</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">squares</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span><span class="o">**</span><span class="mi">2</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">11</span><span class="p">)]</span>

<span class="k">print</span><span class="p">(</span><span class="n">squares</span><span class="p">)</span>
<span class="c1">#Output: [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
</span></code></pre></div></div>

<p>Supongamos que tenemos una lista de países en minúscula y queremos capitalizar el primer carácter de cada país, así es como podríamos hacerlo con un bucle for:</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">paises</span> <span class="o">=</span> <span class="p">[</span><span class="s">"japon"</span><span class="p">,</span> <span class="s">"laos"</span><span class="p">,</span> <span class="s">"colombia"</span><span class="p">,</span> <span class="s">"madagascar"</span><span class="p">]</span>

<span class="n">cap_paises</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">pais</span> <span class="ow">in</span> <span class="n">paises</span><span class="p">:</span>
    <span class="n">cap_paises</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">pais</span><span class="p">.</span><span class="n">capitalize</span><span class="p">())</span>

<span class="k">print</span><span class="p">(</span><span class="n">cap_paises</span><span class="p">)</span>

<span class="c1">#Output: ['Japon', 'Laos', 'Colombia', 'Madagascar']
</span></code></pre></div></div>

<p>Resolvamos el mismo problema con la sintaxis <code class="language-plaintext highlighter-rouge">List Comrehension</code> de Python.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">paises</span> <span class="o">=</span> <span class="p">[</span><span class="s">"japon"</span><span class="p">,</span> <span class="s">"laos"</span><span class="p">,</span> <span class="s">"colombia"</span><span class="p">,</span> <span class="s">"madagascar"</span><span class="p">]</span>
<span class="n">cap_paises</span> <span class="o">=</span> <span class="p">[</span><span class="n">pais</span><span class="p">.</span><span class="n">capitalize</span><span class="p">()</span> <span class="k">for</span> <span class="n">pais</span> <span class="ow">in</span> <span class="n">paises</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="n">cap_paises</span><span class="p">)</span>
<span class="c1">#Output: ['Japon', 'Laos', 'Colombia', 'Madagascar']
</span></code></pre></div></div>
:ET