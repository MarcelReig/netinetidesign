I"q<p>Un <strong>Array</strong> es un objeto global en JavaScript utilizado para almacenar datos de tipo números, strings y objetos en una lista de valores con un nombre y un índice.
Los arrays comienzan a partir del índice cero y pueden ser manipulados con varios métodos.</p>

<p>Para acceder a un item en el array añadimos su índice entre corchetes detrás de la variable.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">scifiBooks</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">Yo Robot</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Fundación e imperio</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">1984</span><span class="dl">"</span><span class="p">];</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">scifiBooks</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Output
<span class="s2">"1984"</span>
</code></pre></div></div>

<p><a href="https://jsbin.com/bubukey/edit?js,console" target="\_blank"><small><i class="fas fa-external-link-alt"></i> Play with it in JS Bin!</small></a></p>

<p><strong>Array.isArray()</strong> determina si el valor pasado es un Array.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]);</span> <span class="c1">// true</span>
</code></pre></div></div>

<h3>
  Métodos Mutadores
  <small class="text-muted">Mutan el array original</small>
</h3>

<p><strong>pop ()</strong> Elimina el último elemento de un array y lo devuelve.<br />
<strong>shift()</strong> Elimina el primer elemento del array y lo devuelve.<br />
<strong>push()</strong> Añade uno o más elementos al final de un array.<br />
<strong>unshift()</strong> Agrega uno o más elementos al inicio del array.<br />
<strong>splice()</strong> El método splice() cambia el contenido de un array eliminando elementos existentes y/o agregando nuevos elementos. Acepta tres parámetros:</p>

<ol>
  <li>índice donde se comenzará a cambiar el array.</li>
  <li>un entero indicando el número de elementos a eliminar.</li>
  <li>los elementos que se añadirán al array empezando en el índice indicado en el primer parámetro.</li>
</ol>

<p><strong>reverse()</strong> El método reverse() invierte el orden de los elementos de un array.<br />
<strong>fill()</strong> Cambia todos los elementos en un array por un valor estático. Acepta tres parámetros:</p>

<ol>
  <li>Valor con el que se va a rellenar el array.</li>
  <li>Índice inicial.</li>
  <li>Índice final.</li>
</ol>

<p><strong>sort()</strong> Ordena los elementos de un array de acuerdo a su valor Unicode.</p>

<h3>
  Métodos de acceso
  <small class="text-muted">No mutan el array original</small>
</h3>

<p><strong>concat()</strong><br />
<strong>join()</strong><br />
<strong>slice()</strong><br />
<strong>indexOf()</strong><br />
<strong>lastIndexOf()</strong></p>

<h3 id="métodos-de-iteración">Métodos de iteración</h3>

<h4 id="for">For</h4>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">bebidas</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">Vodka</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Mate</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Caipirinha</span><span class="dl">"</span><span class="p">];</span>
<span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">bebidas</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">bebidas</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Output
<span class="s2">"Vodka"</span>
<span class="s2">"Mate"</span>
<span class="s2">"Caipirinha"</span>
</code></pre></div></div>

<p><strong>Pros:</strong> Permite hacer cosas como utilizar break y continue.<br />
<strong>Contras:</strong> Sintaxis poco legible.</p>

<div class="alert alert-info" role="alert">
  <i class="fas fa-info-circle"></i> <b>Nota:</b> For no es un método de los arrays, es una sentencia para bucles en JavaScript pero se utiliza para recorrer arrays.
</div>

<p><a href="https://jsbin.com/wuhiqun/edit?js,console" target="\_blank"><small><i class="fas fa-external-link-alt"></i> Play with it in JS Bin!</small></a></p>

<h4 id="foreach">Foreach</h4>

<p>Array forEach() es un método de <code class="language-plaintext highlighter-rouge">Array.prototype</code> introducido en ECMAScript 5.</p>

<p>ForEach Es la versión moderna del bucle for, con una sintaxis más sencilla.</p>

<p>El método forEach() ejecuta la función indicada una vez por cada elemento del array.</p>

<p>El método foreach() no modifica el array original.</p>

<p>El método foreach() llama a una función callback que acepta tres parámetros:</p>

<ol>
  <li>Valor actual del elemento</li>
  <li>Indice del elemento (opcional)</li>
  <li>El Array (opcional)</li>
</ol>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">listaCompra</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">Platanos</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Chocolate</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Limones</span><span class="dl">"</span><span class="p">];</span>

<span class="kd">function</span> <span class="nx">miCompra</span><span class="p">(</span><span class="nx">producto</span><span class="p">,</span> <span class="nx">index</span><span class="p">,</span> <span class="nx">array</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">`En el </span><span class="p">${</span><span class="nx">index</span><span class="p">}</span><span class="s2">: </span><span class="p">${</span><span class="nx">producto</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>
<span class="p">}</span>

<span class="nx">listaCompra</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">miCompra</span><span class="p">);</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Output
<span class="s2">"En el 0: Platanos"</span>
<span class="s2">"En el 1: Chocolate"</span>
<span class="s2">"En el 2: Limones"</span>
</code></pre></div></div>

<p><a href="https://jsbin.com/xukiher/edit?js,console" target="\_blank"><small><i class="fas fa-external-link-alt"></i> Play with it in JS Bin!</small></a></p>

<p>Puedes simplificar el código de los loops foEach utlizando funciones flecha.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">colors</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">red</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">green</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">blue</span><span class="dl">"</span><span class="p">];</span>

<span class="nx">colors</span><span class="p">.</span><span class="nx">forEach</span><span class="p">((</span><span class="nx">color</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">color</span><span class="p">));</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Output
<span class="s1">'red'</span>
<span class="s1">'green'</span>
<span class="s1">'blue'</span>
</code></pre></div></div>

<p><a href="https://jsbin.com/jecuyet/edit?js,console" target="\_blank"><small><i class="fas fa-external-link-alt"></i> Play with it in JS Bin!</small></a></p>

<h4 id="map">Map</h4>

<p>Array map() es un método de <code class="language-plaintext highlighter-rouge">Array.prototype</code> introducido en ECMAScript 5.</p>

<p>El método map() crea un nuevo array con los resultados de la llamada a la función indicada aplicados a cada uno de sus elementos.</p>

<p>El método map() no modifica el array original.</p>

<p>El método map() llama a una función callback que recibe tres parámetros:</p>

<ol>
  <li>Valor actual del elemento</li>
  <li>Indice del elemento (opcional)</li>
  <li>El Array (opcional)</li>
</ol>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">scifiMovies</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Tron</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">director</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Steven Lisberger</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">year</span><span class="p">:</span> <span class="mi">1982</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Blade Runner 2049</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">director</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Denis Villeneuve</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">year</span><span class="p">:</span> <span class="mi">2017</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Ex Machina</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">director</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Alex Garland</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">year</span><span class="p">:</span> <span class="mi">2015</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">];</span>

<span class="kd">let</span> <span class="nx">directores</span> <span class="o">=</span> <span class="nx">scifiMovies</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">x</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">director</span><span class="p">;</span>
<span class="p">});</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">directores</span><span class="p">);</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Output
<span class="o">[</span><span class="s2">"Steven Lisberger"</span>, <span class="s2">"Denis Villeneuve"</span>, <span class="s2">"Alex Garland"</span><span class="o">]</span>
</code></pre></div></div>

<p><a href="https://jsbin.com/wumudop/edit?js,console" target="\_blank"><small><i class="fas fa-external-link-alt"></i> Play with it in JS Bin!</small></a></p>

<div class="alert alert-info" role="alert">
  <p><i class="fas fa-info-circle"></i> <b>Diferencia entre foreach() y map()</b></p>
  <p>foreach() itera sobre una array en el que puedes aplicar operaciones en cada uno de sus ítems pero no devuelve nada, si guardas el resultado de la ejecución en una variable devuelve undefined.</p>
  <p>map() recorre un array y devuelve una copia del array modificado.</p>
</div>

<h4 id="filter">Filter</h4>

<p>El método filter() de <code class="language-plaintext highlighter-rouge">Array.prototype</code> crea un nuevo array con todos los elementos que cumplan la condición implementada por la función dada.</p>

<p>callback es invocado con tres argumentos:</p>

<ol>
  <li>el valor del elemento</li>
  <li>el indice del elemento</li>
  <li>el objeto array completo</li>
</ol>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">randomPlaylist</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span> <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Led Zepelin</span><span class="dl">"</span><span class="p">,</span> <span class="na">genre</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Rock</span><span class="dl">"</span> <span class="p">},</span>
  <span class="p">{</span> <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Daft Punk</span><span class="dl">"</span><span class="p">,</span> <span class="na">genre</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Techno</span><span class="dl">"</span> <span class="p">},</span>
  <span class="p">{</span> <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Wu Tang</span><span class="dl">"</span><span class="p">,</span> <span class="na">genre</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Hip Hop</span><span class="dl">"</span> <span class="p">},</span>
  <span class="p">{</span> <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Tupack</span><span class="dl">"</span><span class="p">,</span> <span class="na">genre</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Hip Hop</span><span class="dl">"</span> <span class="p">},</span>
<span class="p">];</span>

<span class="kd">let</span> <span class="nx">hiphopMusic</span> <span class="o">=</span> <span class="nx">randomPlaylist</span><span class="p">.</span><span class="nx">filter</span><span class="p">((</span><span class="nx">band</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">band</span><span class="p">.</span><span class="nx">genre</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">Hip Hop</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">let</span> <span class="nx">hiphopBand</span> <span class="o">=</span> <span class="nx">hiphopMusic</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">artist</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">artist</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">hiphopMusic</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">hiphopBand</span><span class="p">);</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Output
<span class="o">[[</span>object Object] <span class="o">{</span>
  genre: <span class="s2">"Hip Hop"</span>,
  name: <span class="s2">"Wu Tang"</span>
<span class="o">}</span>, <span class="o">[</span>object Object] <span class="o">{</span>
  genre: <span class="s2">"Hip Hop"</span>,
  name: <span class="s2">"Tupack"</span>
<span class="o">}]</span>
<span class="o">[</span><span class="s2">"Wu Tang"</span>, <span class="s2">"Tupack"</span><span class="o">]</span>
</code></pre></div></div>

<div class="alert alert-secondary" role="alert">
  En el ejemplo he combinado los métodos map() y filter() para obtener solo el nombre de la banda, no el objeto completo.
</div>

<p><a href="https://jsbin.com/foyikef/edit?js,console" target="\_blank"><small><i class="fas fa-external-link-alt"></i> Play with it in JS Bin!</small></a></p>

<h4 id="reduce">Reduce</h4>

<p>Array Reduce es un método de <code class="language-plaintext highlighter-rouge">Array.prototype</code> introducido en ECMAScript 5 (ES5) y es soportado por todos los navegadores modernos.</p>

<p>El método reduce() ejecuta una función reductora sobre cada elemento de un array, devolviendo como resultado un único valor.</p>

<p>La función reductora recibe cuatro argumentos:</p>

<ol>
  <li>Acumulador (acc)</li>
  <li>Valor Actual (cur)</li>
  <li>Índice Actual (idx) // Opcional</li>
  <li>Array (arr) // Opcional</li>
</ol>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">letters</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">H</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">e</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">l</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">l</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">o</span><span class="dl">"</span><span class="p">];</span>

<span class="kd">let</span> <span class="nx">word</span> <span class="o">=</span> <span class="nx">letters</span><span class="p">.</span><span class="nx">reduce</span><span class="p">((</span><span class="nx">acc</span><span class="p">,</span> <span class="nx">cur</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">acc</span> <span class="o">+</span> <span class="nx">cur</span><span class="p">;</span>
<span class="p">});</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">word</span><span class="p">);</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Output
<span class="s2">"Hello"</span>
</code></pre></div></div>

<p><a href="https://jsbin.com/heduson/edit?js,console" target="\_blank"><small><i class="fas fa-external-link-alt"></i> Play with it in JS Bin!</small></a></p>

<h4 id="find">Find</h4>

<p><strong>Find en un array de cadenas</strong></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">objetosPerdidos</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">Airpod derecho</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Chancla izquierda</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Gafas de sol</span><span class="dl">"</span><span class="p">];</span>

<span class="kd">const</span> <span class="nx">buscar</span> <span class="o">=</span> <span class="nx">objetosPerdidos</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">buscarObjeto</span><span class="p">);</span>

<span class="kd">function</span> <span class="nx">buscarObjeto</span><span class="p">(</span><span class="nx">objeto</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">objeto</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">Chancla izquierda</span><span class="dl">"</span><span class="p">;</span>
<span class="p">}</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">buscar</span><span class="p">);</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Output
<span class="s2">"Chancla izquierda"</span>
</code></pre></div></div>

<p><a href="https://jsbin.com/nelekut/2/edit?js,console" target="\_blank"><small><i class="fas fa-external-link-alt"></i> Play with it in JS Bin!</small></a></p>

<p><strong>Find en un array de objetos</strong></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">vehiculosOcasion</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">marca</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Volkswagen</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">modelo</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Polo</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">km</span><span class="p">:</span> <span class="mf">80.0</span><span class="p">,</span>
    <span class="na">year</span><span class="p">:</span> <span class="mi">2000</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">marca</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Seat</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">modelo</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Ibiza</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">km</span><span class="p">:</span> <span class="mf">280.0</span><span class="p">,</span>
    <span class="na">year</span><span class="p">:</span> <span class="mi">2005</span><span class="p">,</span>
  <span class="p">},</span>

  <span class="p">{</span>
    <span class="na">marca</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Toyota</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">modelo</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Yaris</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">km</span><span class="p">:</span> <span class="mf">30.0</span><span class="p">,</span>
    <span class="na">year</span><span class="p">:</span> <span class="mi">2010</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">];</span>

<span class="kd">const</span> <span class="nx">propiedad1</span> <span class="o">=</span> <span class="nx">vehiculosOcasion</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">pocosKm</span><span class="p">).</span><span class="nx">marca</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">propiedad2</span> <span class="o">=</span> <span class="nx">vehiculosOcasion</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">pocosKm</span><span class="p">).</span><span class="nx">modelo</span><span class="p">;</span>

<span class="kd">function</span> <span class="nx">pocosKm</span><span class="p">(</span><span class="nx">vehiculo</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">vehiculo</span><span class="p">.</span><span class="nx">km</span> <span class="o">&lt;</span> <span class="mf">50.0</span><span class="p">;</span>
<span class="p">}</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">`Tenemos un: </span><span class="p">${</span><span class="nx">propiedad1</span><span class="p">}</span><span class="s2"> </span><span class="p">${</span><span class="nx">propiedad2</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Output
<span class="s2">"Tenemos un: Toyota Yaris"</span>
</code></pre></div></div>

<p><a href="https://jsbin.com/boseqif/edit?js,console" target="\_blank"><small><i class="fas fa-external-link-alt"></i> Play with it in JS Bin!</small></a></p>

<h4 id="spread-operator">Spread operator</h4>

<p>Spread operator es añadido en ECMAScript 6</p>

<p><code class="language-plaintext highlighter-rouge">...</code></p>

<p>Spread coge un array y lo divide en una lista de argumentos.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">frutas</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">Manzana</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Naranja</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Platano</span><span class="dl">"</span><span class="p">];</span>

<span class="kd">let</span> <span class="nx">nuevoArrayFrutas</span> <span class="o">=</span> <span class="p">[...</span><span class="nx">frutas</span><span class="p">];</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">nuevoArrayFrutas</span><span class="p">);</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Output
<span class="o">[</span><span class="s2">"Manzana"</span>, <span class="s2">"Naranja"</span>, <span class="s2">"Platano"</span><span class="o">]</span>
</code></pre></div></div>

<p>Spread te permite concatenar arrays,(también funciona con objetos.)</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">frutas</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">Manzana</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Naranja</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Platano</span><span class="dl">"</span><span class="p">];</span>
<span class="kd">let</span> <span class="nx">frutas2</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">Piña</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Limon</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Mandarina</span><span class="dl">"</span><span class="p">];</span>

<span class="kd">let</span> <span class="nx">macedonia</span> <span class="o">=</span> <span class="p">[...</span><span class="nx">frutas</span><span class="p">,</span> <span class="p">...</span><span class="nx">frutas2</span><span class="p">];</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">macedonia</span><span class="p">);</span>
</code></pre></div></div>

<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Output
<span class="o">[</span>
  <span class="s2">"Manzana"</span>,
  <span class="s2">"Naranja"</span>,
  <span class="s2">"Platano"</span>,
  <span class="s2">"Piña"</span>,
  <span class="s2">"Limon"</span>,
  <span class="s2">"Mandarina"</span>
<span class="o">]</span>
</code></pre></div></div>

<p><a href="https://jsbin.com/cofaqup/edit?js,console" target="\_blank"><small><i class="fas fa-external-link-alt"></i> Play with it in JS Bin!</small></a></p>
:ET