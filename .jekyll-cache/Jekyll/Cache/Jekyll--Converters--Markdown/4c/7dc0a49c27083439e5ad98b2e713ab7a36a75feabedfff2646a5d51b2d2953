I"<h2 id="√°mbito-scope">√Åmbito (Scope)</h2>

<p>El √°mbito de una variable en javascript es la zona donde se declara una variable y puede ser de dos tipos, global o local.</p>

<p>La variables que se crean dentro de una funci√≥n son variables locales y solamente son accesibles desde dentro de la funci√≥n.</p>

<!-- more -->

<p>Las variables que se crean fuera de cualquier funci√≥n se convierten en variables globales y son accesibles desde cualquier punto del programa.</p>

<p>JavaScript no soporta √°mbito de bloque por lo que crear una variable dentro de una estructura de bloque como un bucle for no restringe la variable a este bucle.</p>

<p>Ejemplo de variable global:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">varGlobal</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Soy una variable global</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">varGlobal</span><span class="p">);</span> <span class="c1">// Soy una variable global</span>
</code></pre></div></div>

<h2 id="clausuras-closures">Clausuras (Closures)</h2>

<blockquote>
  <p>Los closures son funciones que manejan variables independientes. En otras palabras, la funci√≥n definida en el closure ‚Äúrecuerda‚Äù el entorno en el que se ha creado. - <a href="https://developer.mozilla.org/es/docs/Web/JavaScript/Closures">mdn</a></p>
</blockquote>

<p>Ejemplo de clausura:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">numberGenerator</span><span class="p">()</span> <span class="p">{</span>
  <span class="c1">// Variable local que termina dentro de la clausura</span>
  <span class="kd">var</span> <span class="nx">num</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
  <span class="kd">function</span> <span class="nf">checkNumber</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">num</span><span class="p">);</span>
  <span class="p">}</span>
  <span class="nx">num</span><span class="o">++</span><span class="p">;</span>
  <span class="k">return</span> <span class="nx">checkNumber</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">var</span> <span class="nx">number</span> <span class="o">=</span> <span class="nf">numberGenerator</span><span class="p">();</span>
<span class="nf">number</span><span class="p">();</span> <span class="c1">// 2</span>
</code></pre></div></div>

<p>Enlaces √∫tiles</p>

<ul>
  <li>
    <p><a href="https://developer.mozilla.org/es/docs/Web/JavaScript/Closures">mdn JavaScript Closures</a></p>
  </li>
  <li>
    <p><a href="https://developer.mozilla.org/es/docs/Web/JavaScript/Guide/Funciones">mdn JavaScript Funciones</a></p>
  </li>
</ul>
:ET